grammar Hello;

program: (statement SEMICOLON | label)+;

statement
    : stmt_exec_unary
    | stmt_exec_binary
    | stmt_display
    | stmt_set
    | stmt_jumpif
    ;

lvalue
    : IDENT
    | mem
    ;

rvalue
    : CONST
    | lvalue
    ;

mem: '[' rvalue ']';

label: IDENT COLON;
stmt_exec_unary: 'exec' IDENT lvalue rvalue;
stmt_exec_binary: 'exec' IDENT lvalue rvalue rvalue;
stmt_display
    : 'display' rvalue
    | 'display' STRING_LITERAL
    ;
stmt_set: 'set' lvalue rvalue;
stmt_jumpif
    : 'jumpif' INVERT rvalue IDENT
    | 'jumpif' rvalue IDENT
    ;

WHITESPACE: [\t\r\n ]+ -> skip;
SEMICOLON: ';';
INVERT: 'not';
COLON: ':';
CONST: '-'? [0-9]+;
STRING_LITERAL: '"' (.*?) '"';
IDENT: ([a-zA-Z]) ([a-zA-Z0-9_]*);
